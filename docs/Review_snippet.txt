https://developers.google.com/search/docs/data-types/review-snippet

Home
Google Search Central
Documentation
Advanced SEO
Send feedback
Review snippet
Are you here because you got a message from Search Console? Check our
troubleshooting resources.
A review snippet is a short excerpt of a review or a rating from a review website, usually an
average of the combined rating scores from many reviewers. When Google finds valid reviews or
ratings markup, we may show a rich snippet that includes stars and other summary info from
reviews or ratings. In addition to the text of the review, a rating is an evaluation described
on a numeric scale (such as 1 to 5). Review snippets may appear in rich results or Google
Knowledge Panels. You can supply ratings for the following content types (and subtypes):
Book
Course
Event
How-to
Local business
Movie
Product
Recipe
Software App
Google also supports reviews for the following schema.org types (and their subtypes):
CreativeWorkSeason
CreativeWorkSeries
Episode
Game
MediaObject
MusicPlaylist
MusicRecording
Organization
Does your site provide reviews from critics?
Use critic review structured data.
Does your site provide reviews about other employers? Use
EmployerAggregateRating structured
data.
Does your site review claims made by others? Use
Fact check structured data.
How to add structured data
Structured data is a standardized format for providing information about a page and classifying the page
content. If you're new to structured data, you can learn more about
how structured data works.
Here's an overview of how to build, test, and release structured data. For a step-by-step guide
on how to add structured data to a web page, check out the
structured
data codelab.
Add the required properties. For information about where to put
structured data on the page, watch JSON-LD structured
data: Where to insert on the page.
Follow the guidelines.
Validate your code using the
Rich Results Test.
Deploy a few pages that include your structured data and use the URL Inspection tool to test how Google sees the page. Be sure that your page is
accessible to Google and not blocked by a robots.txt file, the noindex tag, or
login requirements. If the page looks okay, you can
ask Google to
recrawl your URLs.
Note: Allow time for re-crawling and re-indexing. Remember that it
may take several days after publishing a page for Google to find and crawl it.
To keep Google informed of future changes, we recommend that you
submit a
sitemap. You can automate this with the
Search Console Sitemap
API.
Examples
There are several ways you can add Review structured data to a page:
Add a simple review.
Nest a review into another schema.org type using its
review property.
Add aggregate ratings. You can omit the rating for an individual review if your marked-up
content contains both an author and a review date. For aggregate reviews, you must supply
the average rating for the rich snippet to display.
Nest aggregate ratings into another schema.org type using its
aggregateRating property.
Simple review
Here's an example of a simple review that you can copy and paste to your own HTML
page.
JSON-LD
<html>
<head>
<title>Legal Seafood</title>
<script type="application/ld+json">
{
"@context": "https://schema.org/",
"@type": "Review",
"itemReviewed": {
"@type": "Restaurant",
"image": "http://www.example.com/seafood-restaurant.jpg",
"name": "Legal Seafood",
"servesCuisine": "Seafood",
"priceRange": "$$$",
"telephone": "1234567",
"address" :{
"@type": "PostalAddress",
"streetAddress": "123 William St",
"addressLocality": "New York",
"addressRegion": "NY",
"postalCode": "10038",
"addressCountry": "US"
}
},
"reviewRating": {
"@type": "Rating",
"ratingValue": "4"
},
"name": "A good seafood place.",
"author": {
"@type": "Person",
"name": "Bob Smith"
},
"reviewBody": "The seafood is great.",
"publisher": {
"@type": "Organization",
"name": "Washington Times"
}
}
</script>
</head>
<body>
</body>
</html>
<html>
<head>
<title>Legal Seafood</title>
<script type="application/ld+json">
{
"@context": "https://schema.org/",
"@type": "Review",
"itemReviewed": {
"@type": "Restaurant",
"image": "http://www.example.com/seafood-restaurant.jpg",
"name": "Legal Seafood",
"servesCuisine": "Seafood",
"priceRange": "$$$",
"telephone": "1234567",
"address" :{
"@type": "PostalAddress",
"streetAddress": "123 William St",
"addressLocality": "New York",
"addressRegion": "NY",
"postalCode": "10038",
"addressCountry": "US"
}
},
"reviewRating": {
"@type": "Rating",
"ratingValue": "4"
},
"name": "A good seafood place.",
"author": {
"@type": "Person",
"name": "Bob Smith"
},
"reviewBody": "The seafood is great.",
"publisher": {
"@type": "Organization",
"name": "Washington Times"
}
}
</script>
</head>
<body>
</body>
</html>
RDFa
<html>
<head>
<title>Legal Seafood</title>
</head>
<body>
<div vocab="https://schema.org/" typeof="Review">
<div property="itemReviewed" typeof="Restaurant">
<img property="image" src="https://example.com/photos/1x1/seafood-restaurant.jpg" alt="Legal Seafood"/>
<span property="name">Legal Seafood</span>
<span property="servesCuisine">Seafood</span>
<span property="priceRange">$$$</span>
<span property="telephone">1234567</span>
<span property="address">123 William St, New York</span>
</div>
<span property="reviewRating" typeof="Rating">
<span property="ratingValue">4</span>
</span> stars -
<b>"<span property="name">A good seafood place.</span>" </b>
<span property="author" typeof="Person">
<span property="name">Bob Smith</span>
</span>
<span property="reviewBody">The seafood is great.</span>
<div property="publisher" typeof="Organization">
<meta property="name" content="Washington Times">
</div>
</div>
</body>
</html>
<html>
<head>
<title>Legal Seafood</title>
</head>
<body>
<div vocab="https://schema.org/" typeof="Review">
<div property="itemReviewed" typeof="Restaurant">
<img property="image" src="https://example.com/photos/1x1/seafood-restaurant.jpg" alt="Legal Seafood"/>
<span property="name">Legal Seafood</span>
<span property="servesCuisine">Seafood</span>
<span property="priceRange">$$$</span>
<span property="telephone">1234567</span>
<span property="address">123 William St, New York</span>
</div>
<span property="reviewRating" typeof="Rating">
<span property="ratingValue">4</span>
</span> stars -
<b>"<span property="name">A good seafood place.</span>" </b>
<span property="author" typeof="Person">
<span property="name">Bob Smith</span>
</span>
<span property="reviewBody">The seafood is great.</span>
<div property="publisher" typeof="Organization">
<meta property="name" content="Washington Times">
</div>
</div>
</body>
</html>
Microdata
<html>
<head>
<title>Legal Seafood</title>
</head>
<body>
<div itemscope itemtype="https://schema.org/Review">
<div itemprop="itemReviewed" itemscope itemtype="https://schema.org/Restaurant">
<img itemprop="image" src="https://example.com/photos/1x1/seafood-restaurant.jpg" alt="Legal Seafood"/>
<span itemprop="name">Legal Seafood</span>
<span itemprop="servesCuisine">Seafood</span>
<span itemprop="priceRange">$$$</span>
<span itemprop="telephone">1234567</span>
<span itemprop="address">123 William St, New York</span>
</div>
<span itemprop="reviewRating" itemscope itemtype="https://schema.org/Rating">
<span itemprop="ratingValue">4</span>
</span> stars -
<b>"<span itemprop="name">A good seafood place.</span>" </b>
<span itemprop="author" itemscope itemtype="https://schema.org/Person">
<span itemprop="name">Bob Smith</span>
</span>
<span itemprop="reviewBody">The seafood is great.</span>
<div itemprop="publisher" itemscope itemtype="https://schema.org/Organization">
<meta itemprop="name" content="Washington Times">
</div>
</div>
</body>
</html>
<html>
<head>
<title>Legal Seafood</title>
</head>
<body>
<div itemscope itemtype="https://schema.org/Review">
<div itemprop="itemReviewed" itemscope itemtype="https://schema.org/Restaurant">
<img itemprop="image" src="https://example.com/photos/1x1/seafood-restaurant.jpg" alt="Legal Seafood"/>
<span itemprop="name">Legal Seafood</span>
<span itemprop="servesCuisine">Seafood</span>
<span itemprop="priceRange">$$$</span>
<span itemprop="telephone">1234567</span>
<span itemprop="address">123 William St, New York</span>
</div>
<span itemprop="reviewRating" itemscope itemtype="https://schema.org/Rating">
<span itemprop="ratingValue">4</span>
</span> stars -
<b>"<span itemprop="name">A good seafood place.</span>" </b>
<span itemprop="author" itemscope itemtype="https://schema.org/Person">
<span itemprop="name">Bob Smith</span>
</span>
<span itemprop="reviewBody">The seafood is great.</span>
<div itemprop="publisher" itemscope itemtype="https://schema.org/Organization">
<meta itemprop="name" content="Washington Times">
</div>
</div>
</body>
</html>
Nested review
Here's an example of a review that's nested in a Product. You can copy and
paste the example to your own HTML page.
JSON-LD
<html>
<head>
<title>The Catcher in the Rye</title>
<script type="application/ld+json">
{
"@context": "https://schema.org/",
"@type": "Product",
"brand": {
"@type": "Brand",
"name": "Penguin Books"
},
"description": "The Catcher in the Rye is a classic coming-of-age story: an story of teenage alienation, capturing the human need for connection and the bewildering sense of loss as we leave childhood behind.",
"sku": "9780241984758",
"mpn": "925872",
"image": "http://www.example.com/catcher-in-the-rye-book-cover.jpg",
"name": "The Catcher in the Rye",
"review": {
"@type": "Review",
"reviewRating": {
"@type": "Rating",
"ratingValue": "5"
},
"author": {
"@type": "Person",
"name": "John Doe"
},
"reviewBody": "I really enjoyed this book. It captures the essential challenge people face as they try make sense of their lives and grow to adulthood."
},
"aggregateRating": {
"@type": "AggregateRating",
"ratingValue": "88",
"bestRating": "100",
"ratingCount": "20"
},
"offers": {
"@type": "Offer",
"url": "https://example.com/offers/catcher-in-the-rye",
"priceCurrency": "USD",
"price": "5.99",
"priceValidUntil": "2020-11-05",
"itemCondition": "https://schema.org/UsedCondition",
"availability": "https://schema.org/InStock",
"seller": {
"@type": "Organization",
"name": "eBay"
}
}
}
</script>
</head>
<body>
</body>
</html>
<html>
<head>
<title>The Catcher in the Rye</title>
<script type="application/ld+json">
{
"@context": "https://schema.org/",
"@type": "Product",
"brand": {
"@type": "Brand",
"name": "Penguin Books"
},
"description": "The Catcher in the Rye is a classic coming-of-age story: an story of teenage alienation, capturing the human need for connection and the bewildering sense of loss as we leave childhood behind.",
"sku": "9780241984758",
"mpn": "925872",
"image": "http://www.example.com/catcher-in-the-rye-book-cover.jpg",
"name": "The Catcher in the Rye",
"review": {
"@type": "Review",
"reviewRating": {
"@type": "Rating",
"ratingValue": "5"
},
"author": {
"@type": "Person",
"name": "John Doe"
},
"reviewBody": "I really enjoyed this book. It captures the essential challenge people face as they try make sense of their lives and grow to adulthood."
},
"aggregateRating": {
"@type": "AggregateRating",
"ratingValue": "88",
"bestRating": "100",
"ratingCount": "20"
},
"offers": {
"@type": "Offer",
"url": "https://example.com/offers/catcher-in-the-rye",
"priceCurrency": "USD",
"price": "5.99",
"priceValidUntil": "2020-11-05",
"itemCondition": "https://schema.org/UsedCondition",
"availability": "https://schema.org/InStock",
"seller": {
"@type": "Organization",
"name": "eBay"
}
}
}
</script>
</head>
<body>
</body>
</html>
RDFa
<html>
<head>
<title>The Catcher in the Rye</title>
</head>
<body>
<div vocab="https://schema.org/" typeof="Product">
<img property="image" src="https://example.com/photos/1x1/catcher-in-the-rye-book-cover.jpg" alt="Catcher in the Rye"/>
<span property="name">The Catcher in the Rye</span>
<div property="review" typeof="Review"> Review:
<span property="reviewRating" typeof="Rating">
<span property="ratingValue">5</span> -
</span>
<b>"<span property="name">A masterpiece of literature</span>" </b> by
<span property="author" typeof="Person">
<span property="name">John Doe</span></span>, written on
<meta property="datePublished" content="2006-05-04">May 4, 2006
<div property="reviewBody">I really enjoyed this book. It captures the essential challenge people face as they try make sense of their lives and grow to adulthood.</div>
<span property="publisher" typeof="Organization">
<meta property="name" content="Washington Times">
</span>
</div>
</div>
</body>
</html>
<html>
<head>
<title>The Catcher in the Rye</title>
</head>
<body>
<div vocab="https://schema.org/" typeof="Product">
<img property="image" src="https://example.com/photos/1x1/catcher-in-the-rye-book-cover.jpg" alt="Catcher in the Rye"/>
<span property="name">The Catcher in the Rye</span>
<div property="review" typeof="Review"> Review:
<span property="reviewRating" typeof="Rating">
<span property="ratingValue">5</span> -
</span>
<b>"<span property="name">A masterpiece of literature</span>" </b> by
<span property="author" typeof="Person">
<span property="name">John Doe</span></span>, written on
<meta property="datePublished" content="2006-05-04">May 4, 2006
<div property="reviewBody">I really enjoyed this book. It captures the essential challenge people face as they try make sense of their lives and grow to adulthood.</div>
<span property="publisher" typeof="Organization">
<meta property="name" content="Washington Times">
</span>
</div>
</div>
</body>
</html>
Microdata
<html>
<head>
<title>The Catcher in the Rye</title>
</head>
<body>
<div itemscope itemtype="https://schema.org/Product">
<img itemprop="image" src="https://example.com/photos/1x1/catcher-in-the-rye-book-cover.jpg" alt="Catcher in the Rye"/>
<span itemprop="name">The Catcher in the Rye</span>
<div itemprop="review" itemscope itemtype="https://schema.org/Review"> Review:
<span itemprop="reviewRating" itemscope itemtype="https://schema.org/Rating">
<span itemprop="ratingValue">5</span> -
</span>
<b>"<span itemprop="name">A masterpiece of literature</span>" </b> by
<span itemprop="author" itemscope itemtype="https://schema.org/Person">
<span itemprop="name">John Doe</span></span>, written on
<meta itemprop="datePublished" content="2006-05-04">May 4, 2006
<div itemprop="reviewBody">I really enjoyed this book. It captures the essential challenge people face as they try make sense of their lives and grow to adulthood.</div>
<span itemprop="publisher" itemscope itemtype="https://schema.org/Organization">
<meta itemprop="name" content="Washington Times">
</span>
</div>
</div>
</body>
</html>
<html>
<head>
<title>The Catcher in the Rye</title>
</head>
<body>
<div itemscope itemtype="https://schema.org/Product">
<img itemprop="image" src="https://example.com/photos/1x1/catcher-in-the-rye-book-cover.jpg" alt="Catcher in the Rye"/>
<span itemprop="name">The Catcher in the Rye</span>
<div itemprop="review" itemscope itemtype="https://schema.org/Review"> Review:
<span itemprop="reviewRating" itemscope itemtype="https://schema.org/Rating">
<span itemprop="ratingValue">5</span> -
</span>
<b>"<span itemprop="name">A masterpiece of literature</span>" </b> by
<span itemprop="author" itemscope itemtype="https://schema.org/Person">
<span itemprop="name">John Doe</span></span>, written on
<meta itemprop="datePublished" content="2006-05-04">May 4, 2006
<div itemprop="reviewBody">I really enjoyed this book. It captures the essential challenge people face as they try make sense of their lives and grow to adulthood.</div>
<span itemprop="publisher" itemscope itemtype="https://schema.org/Organization">
<meta itemprop="name" content="Washington Times">
</span>
</div>
</div>
</body>
</html>
Aggregate rating
Here's an example of an aggregate rating that you can copy and paste to your own HTML
page.
JSON-LD
<html>
<head>
<title>Legal Seafood</title>
<script type="application/ld+json">
{
"@context": "https://schema.org/",
"@type": "AggregateRating",
"itemReviewed": {
"@type": "Restaurant",
"image": "http://www.example.com/seafood-restaurant.jpg",
"name": "Legal Seafood",
"servesCuisine": "Seafood",
"telephone": "1234567",
"address" : {
"@type": "PostalAddress",
"streetAddress": "123 William St",
"addressLocality": "New York",
"addressRegion": "NY",
"postalCode": "10038",
"addressCountry": "US"
}
},
"ratingValue": "88",
"bestRating": "100",
"ratingCount": "20"
}
</script>
</head>
<body>
</body>
</html>
<html>
<head>
<title>Legal Seafood</title>
<script type="application/ld+json">
{
"@context": "https://schema.org/",
"@type": "AggregateRating",
"itemReviewed": {
"@type": "Restaurant",
"image": "http://www.example.com/seafood-restaurant.jpg",
"name": "Legal Seafood",
"servesCuisine": "Seafood",
"telephone": "1234567",
"address" : {
"@type": "PostalAddress",
"streetAddress": "123 William St",
"addressLocality": "New York",
"addressRegion": "NY",
"postalCode": "10038",
"addressCountry": "US"
}
},
"ratingValue": "88",
"bestRating": "100",
"ratingCount": "20"
}
</script>
</head>
<body>
</body>
</html>
RDFa
<html>
<head>
<title>Legal Seafood</title>
</head>
<body>
<div vocab="https://schema.org/" typeof="AggregateRating">
<div property="itemReviewed" typeof="Restaurant">
<img property="image" src="https://example.com/photos/1x1/seafood-restaurant.jpg" alt="Legal Seafood"/>
<span property="name">Legal Seafood</span>
<span property="servesCuisine">Seafood</span>
<span property="telephone">1234567</span>
<span property="address">123 William St, New York</span>
</div>
<span property="ratingValue">4.2</span> out of <span property="bestRating">5</span> stars -
<span property="ratingCount">123</span> votes
</div>
</body>
</html>
<html>
<head>
<title>Legal Seafood</title>
</head>
<body>
<div vocab="https://schema.org/" typeof="AggregateRating">
<div property="itemReviewed" typeof="Restaurant">
<img property="image" src="https://example.com/photos/1x1/seafood-restaurant.jpg" alt="Legal Seafood"/>
<span property="name">Legal Seafood</span>
<span property="servesCuisine">Seafood</span>
<span property="telephone">1234567</span>
<span property="address">123 William St, New York</span>
</div>
<span property="ratingValue">4.2</span> out of <span property="bestRating">5</span> stars -
<span property="ratingCount">123</span> votes
</div>
</body>
</html>
Microdata
<html>
<head>
<title>Legal Seafood</title>
</head>
<body>
<div itemscope itemtype="https://schema.org/AggregateRating">
<div itemprop="itemReviewed" itemscope itemtype="https://schema.org/Restaurant">
<img itemprop="image" src="https://example.com/photos/1x1/seafood-restaurant.jpg" alt="Legal Seafood"/>
<span itemprop="name">Legal Seafood</span>
<span itemprop="servesCuisine">Seafood</span>
<span itemprop="telephone">1234567</span>
<span itemprop="address">123 William St, New York</span>
</div>
<span itemprop="ratingValue">4.2</span> out of <span itemprop="bestRating">5</span> stars -
<span itemprop="ratingCount">123</span> votes
</div>
</body>
</html>
<html>
<head>
<title>Legal Seafood</title>
</head>
<body>
<div itemscope itemtype="https://schema.org/AggregateRating">
<div itemprop="itemReviewed" itemscope itemtype="https://schema.org/Restaurant">
<img itemprop="image" src="https://example.com/photos/1x1/seafood-restaurant.jpg" alt="Legal Seafood"/>
<span itemprop="name">Legal Seafood</span>
<span itemprop="servesCuisine">Seafood</span>
<span itemprop="telephone">1234567</span>
<span itemprop="address">123 William St, New York</span>
</div>
<span itemprop="ratingValue">4.2</span> out of <span itemprop="bestRating">5</span> stars -
<span itemprop="ratingCount">123</span> votes
</div>
</body>
</html>
Nested aggregate rating
Here's an example of an aggregate rating that's nested in a Product. You can copy and paste the
example to your own HTML page.
JSON-LD
<html>
<head>
<title>Executive Anvil</title>
<script type="application/ld+json">
{
"@context": "https://schema.org/",
"@type": "Product",
"name": "Executive Anvil",
"image": [
"https://example.com/photos/1x1/photo.jpg",
"https://example.com/photos/4x3/photo.jpg",
"https://example.com/photos/16x9/photo.jpg"
],
"brand": {
"@type": "Thing",
"name": "ACME"
},
"aggregateRating": {
"@type": "AggregateRating",
"ratingValue": "4.4",
"ratingCount": "89"
},
"offers": {
"@type": "AggregateOffer",
"lowPrice": "119.99",
"highPrice": "199.99",
"priceCurrency": "USD"
}
}
</script>
</head>
<body>
</body>
</html>
<html>
<head>
<title>Executive Anvil</title>
<script type="application/ld+json">
{
"@context": "https://schema.org/",
"@type": "Product",
"name": "Executive Anvil",
"image": [
"https://example.com/photos/1x1/photo.jpg",
"https://example.com/photos/4x3/photo.jpg",
"https://example.com/photos/16x9/photo.jpg"
],
"brand": {
"@type": "Thing",
"name": "ACME"
},
"aggregateRating": {
"@type": "AggregateRating",
"ratingValue": "4.4",
"ratingCount": "89"
},
"offers": {
"@type": "AggregateOffer",
"lowPrice": "119.99",
"highPrice": "199.99",
"priceCurrency": "USD"
}
}
</script>
</head>
<body>
</body>
</html>
RDFa
<html>
<head>
<title>Executive Anvil</title>
</head>
<body>
<div vocab="https://schema.org/" typeof="Product">
<span property="brand">ACME</span> <span property="name">Executive Anvil</span>
<img property="image" src="https://example.com/photos/1x1/anvil_executive.jpg" alt="Executive Anvil logo" />
<span property="aggregateRating"
typeof="AggregateRating">
Average rating: <span property="ratingValue">4.4</span>, based on
<span property="ratingCount">89</span> reviews
</span>
<span property="offers" typeof="AggregateOffer">
from $<span property="lowPrice">119.99</span> to
$<span property="highPrice">199.99</span>
<meta property="priceCurrency" content="USD" />
</span>
</div>
</body>
</html>
<html>
<head>
<title>Executive Anvil</title>
</head>
<body>
<div vocab="https://schema.org/" typeof="Product">
<span property="brand">ACME</span> <span property="name">Executive Anvil</span>
<img property="image" src="https://example.com/photos/1x1/anvil_executive.jpg" alt="Executive Anvil logo" />
<span property="aggregateRating"
typeof="AggregateRating">
Average rating: <span property="ratingValue">4.4</span>, based on
<span property="ratingCount">89</span> reviews
</span>
<span property="offers" typeof="AggregateOffer">
from $<span property="lowPrice">119.99</span> to
$<span property="highPrice">199.99</span>
<meta property="priceCurrency" content="USD" />
</span>
</div>
</body>
</html>
Microdata
<html>
<head>
<title>Executive Anvil</title>
</head>
<body>
<div itemscope itemtype="https://schema.org/Product">
<span itemprop="brand">ACME</span> <span itemprop="name">Executive Anvil</span>
<img itemprop="image" src="https://example.com/photos/1x1/anvil_executive.jpg" />
<span itemprop="aggregateRating" itemscope itemtype="https://schema.org/AggregateRating">
Average rating: <span itemprop="ratingValue">4.4</span>, based on
<span itemprop="ratingCount">89</span> reviews
</span>
<span itemprop="offers" itemscope itemtype="https://schema.org/AggregateOffer">
from $<span itemprop="lowPrice">119.99</span> to
$<span itemprop="highPrice">199.99</span>
<meta itemprop="priceCurrency" content="USD" />
</span>
</div>
</body>
</html>
<html>
<head>
<title>Executive Anvil</title>
</head>
<body>
<div itemscope itemtype="https://schema.org/Product">
<span itemprop="brand">ACME</span> <span itemprop="name">Executive Anvil</span>
<img itemprop="image" src="https://example.com/photos/1x1/anvil_executive.jpg" />
<span itemprop="aggregateRating" itemscope itemtype="https://schema.org/AggregateRating">
Average rating: <span itemprop="ratingValue">4.4</span>, based on
<span itemprop="ratingCount">89</span> reviews
</span>
<span itemprop="offers" itemscope itemtype="https://schema.org/AggregateOffer">
from $<span itemprop="lowPrice">119.99</span> to
$<span itemprop="highPrice">199.99</span>
<meta itemprop="priceCurrency" content="USD" />
</span>
</div>
</body>
</html>
Guidelines
Your content must follow these guidelines to be eligible to appear as a rich result.
Warning: If your site violates one or more of these guidelines,
then Google may take manual
action against it. Once you have remedied the problem, you can submit your site for
reconsideration.
Technical guidelines
Webmaster guidelines
General structured data guidelines
Technical guidelines
Make sure to mark up an aggregate evaluation of an item by many people with
schema.org/AggregateRating. Google may
display aggregate ratings as rich snippets or, for certain types of items, answers in
search results.
Refer clearly to a specific product or service by nesting the review within the markup of
another schema.org type, such as schema.org/Book or
schema.org/Recipe, or by using a
schema.org type as a value for the itemReviewed property.
Make sure the reviews and ratings you mark up are readily available to users from the
marked-up page. It should be immediately obvious to users that the page has review
content.
Provide review information about a specific item, not about a category or a list of
items. For examples, refer to the common
errors associated with list items.
If the review snippet is for a local business or an organization, you must follow these additional guidelines:
Pages using LocalBusiness or any other type of Organization
structured data are ineligible for star review feature if the entity being reviewed
controls the reviews about itself. For example, a review about entity A is placed on
the website of entity A, either directly in their structured data or through an
embedded third-party widget.
Ratings must be sourced directly from users.
Don't rely on human editors to create, curate, or compile ratings information for
local businesses; instead, use critic
review structured data.
Sites must collect ratings information directly from users and not from other sites.
Structured data type definitions
You must include the required properties for your structured data to display in search
results. You can also include the recommended properties to add more information to your
structured data, which could provide a better user experience.
Review
The full definition of Review is available at
schema.org/Review.
Required properties
author
Person or
Organization
The author of the review. The reviewer's name must be a valid name. For example,
"50% off until Saturday" is not a valid name for a reviewer.
itemReviewed
Thing
The item that is being reviewed. However, if the review is nested into another
schema.org type using the
review property,
you can omit the itemReviewed property. The valid types for the
reviewed item are:
Book
Course
CreativeWorkSeason
CreativeWorkSeries
Episode
Event
Game
HowTo
LocalBusiness
MediaObject
Movie
MusicPlaylist
MusicRecording
Organization
Product
Recipe
SoftwareApplication
itemReviewed.name
Text
The name of the item that is being reviewed. If the review is nested into another
schema.org type using the
review property,
you still need to provide the name of the thing that is being reviewed. For example:
{
"@context": "https://schema.org/",
"@type": "Game",
"name": "Firefly",
"review": {
"@type": "Review",
"reviewRating": {
"@type": "Rating",
"ratingValue": "5"
},
"author": {
"@type": "Person",
"name": "John Doe"
},
"reviewBody": "I really enjoyed this game. You
get to capture fireflies and put them in jars."
}
}
reviewRating
Rating
The rating given in this review. The rating can be a nested
Rating or more specific subtype. The most typical
subtype is AggregateRating.
reviewRating.ratingValue
Number or
Text
A numerical quality rating for the item, either a number, fraction, or percentage (for example, "4", "60%", or "6 / 10").
Google understands the scale for fractions and percentages, since the scale is
implied in the fraction itself or the percentage. The default scale for numbers is a
5-point scale, where 1 is the lowest value and 5 is the highest value.
If another scale is
intended, use bestRating
and worstRating.
Recommended properties
datePublished
Date
The date that the review was published, in
ISO 8601 date
format.
reviewRating.bestRating
Number
The highest value allowed in this rating system. If bestRating
is omitted, 5 is assumed.
reviewRating.worstRating
Number
The lowest value allowed in this rating system. If worstRating
is omitted, 1 is assumed.
AggregateRating
The full definition of AggregateRating is available at
schema.org/AggregateRating.
Required properties
itemReviewed
Thing
The item that is being rated. However, if the aggregate rating is nested into
another schema.org type using the
aggregateRating
property, you can omit the itemReviewed property. The valid types for the
reviewed item are:
Book
Course
CreativeWorkSeason
CreativeWorkSeries
Episode
Event
Game
HowTo
LocalBusiness
MediaObject
Movie
MusicPlaylist
MusicRecording
Organization
Product
Recipe
SoftwareApplication
itemReviewed.name
Text
The name of the item that is being reviewed. If the review is nested into another
schema.org type using the
review property,
you still need to provide the name of the thing that is being reviewed. For example:
{
"@context": "https://schema.org/",
"@type": "Game",
"name": "Firefly",
"aggregateRating": {
"@type": "AggregateRating",
"ratingValue": "88",
"bestRating": "100",
"ratingCount": "20"
}
}
ratingCount
Number
The total number of ratings for the item on your site. At least one of
ratingCount or reviewCount is required.
reviewCount
Number
Specifies the number of people who provided a review with or without an accompanying
rating. At least one of ratingCount or reviewCount is required.
ratingValue
Number or
Text
A numerical quality rating for the item, either a number, fraction, or percentage (for example, "4", "60%", or "6 / 10").
Google understands the scale for fractions and percentages, since the scale is
implied in the fraction itself or the percentage. The default scale for numbers is a
5-point scale, where 1 is the lowest value and 5 is the highest value.
If another scale is
intended, use bestRating
and worstRating.
Recommended properties
bestRating
Number
The highest value allowed in this rating system. If bestRating
is omitted, 5 is assumed.
worstRating
Number
The lowest value allowed in this rating system. If worstRating
is omitted, 1 is assumed.
Monitor rich results with Search Console
Search Console is a tool that helps you monitor how your pages perform in Google Search.
You don't have to sign up for Search Console to be included in Google Search results,
but it can help you understand and improve how Google sees your site. We
recommend checking Search Console in the following cases:
After deploying structured data for the first time
After releasing new templates or updating your code
Analyzing traffic periodically
After deploying structured data for the first time
After Google has indexed your pages, look for issues using the relevant
Rich result status report.
Ideally you should see an increase of valid pages, and no increase in errors or warnings. If you find issues
in your structured data:
Fix the errors.
Inspect a live URL to check if the issue persists.
Request validation using the status report.
After releasing new templates or updating your code
When you make significant changes to your website, monitor for increases in structured data errors and warnings.
If you see an increase in errors, perhaps you rolled out a new template that doesn't work, or your site interacts with the existing
template in a new and bad way.
If you see a decrease in valid items (not matched by an increase in errors), perhaps you are
no longer embedding structured data in your pages. Use the
URL Inspection tool to learn what is causing the issue.
Analyzing traffic periodically
Analyze your Google Search traffic using the Performance Report.
The data will show you how often your page appears as a rich result in Search, how often users click on it and what is
the average position you appear on search results. You can also automatically pull these
results with the Search
Console API.
Troubleshooting
Important: Google does not guarantee that features that consume structured data will
show up in search results. For a list of common reasons why Google may not
show your content in a rich result, see the General
Structured Data Guidelines.
If you're having trouble implementing structured data, here are some resources that may help you.
You might have an error in your structured data. Check the
list of structured
data errors.
Troubleshoot
missing rich results / drop in total rich results.
For general questions about crawling and indexing, check the
Google Search crawling and indexing FAQ.
Note: Allow time for re-crawling and re-indexing. Remember that it
may take several days after publishing a page for Google to find and crawl it.
Ask a question in the Google Search Central office hours.
Post a question in the Google Search Central
forum.
Send feedback
Except as otherwise noted, the content of this page is licensed under the Creative Commons Attribution 4.0 License, and code samples are licensed under the Apache 2.0 License. For details, see the Google Developers Site Policies. Java is a registered trademark of Oracle and/or its affiliates.
Last updated 2021-01-14 UTC.